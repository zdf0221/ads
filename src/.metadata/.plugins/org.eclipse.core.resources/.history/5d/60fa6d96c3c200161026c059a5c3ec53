package wu.leizi.Driver;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import kafka.consumer.ConsumerConfig;
import kafka.consumer.ConsumerIterator;
import kafka.consumer.KafkaStream;
import kafka.javaapi.consumer.ConsumerConnector;
import kafka.serializer.StringDecoder;
import kafka.utils.VerifiableProperties;
import wu.leizi.Demo.KafkaProducer;
import wu.leizi.moniterContent.HBContent;
import wu.leizi.moniterContent.configContent;
import wu.leizi.moniterContent.contentFactory;

public class HBServerDriver implements HeartBeatDriver {
	private final ConsumerConnector consumer;
	private final ConsumerConfig config;
	private HBContent HBcontent;
	public HBServerDriver() {
		config = configContent.getInstance().ConsumerConfig();
		consumer = kafka.consumer.Consumer.createJavaConsumerConnector(config);
		HBcontent = contentFactory.createHBC();
	}
	public void put() {
		// TODO Auto-generated method stub
		
	}

	public void get() {
		// TODO Auto-generated method stub
	}

	public String getTopic() {
		// TODO Auto-generated method stub
		return configContent.getInstance().getHBTopic();
	}

	public String getStatus() {
		// TODO Auto-generated method stub
		return null;
	}

	
	class CheckThread implements Runnable {

		public void run() {
			// TODO Auto-generated method stub
			
		}
		
	}
	
	class listenThread implements Runnable {
		
		public void run() {
			// TODO Auto-generated method stub
			
		}
		private void task() {
			
		}
		
	}
}
