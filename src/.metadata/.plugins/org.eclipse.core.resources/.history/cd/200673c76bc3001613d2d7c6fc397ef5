package wu.leizi.util;

import kafka.serializer.Encoder;

public class JsonEncoder implements Encoder<Object> {

	 private static final Logger logger = Logger.getLogger(JsonEncoder.class);
	    // instantiating ObjectMapper is expensive. In real life, prefer injecting the value.
	    private static final ObjectMapper objectMapper = new ObjectMapper();

	    public JsonEncoder(VerifiableProperties verifiableProperties) {
	        /* This constructor must be present for successful compile. */
	    }

	    @Override
	    public byte[] toBytes(Object object) {
	        try {
	            return objectMapper.writeValueAsString(object).getBytes();
	        } catch (JsonProcessingException e) {
	            logger.error(String.format("Json processing failed for object: %s", object.getClass().getName()), e);
	        }
	        return "".getBytes();
	    }

}
